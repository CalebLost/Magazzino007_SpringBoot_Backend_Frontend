spring.datasource.url=jdbc:postgresql://localhost:5432/progettomagazzino
#?user=postgres&password=smartstream&ssl=true
spring.datasource.username=postgres
spring.datasource.password=root
spring.datasource.platform=postgres
#spring.datasource.serverName=localhost
#spring.datasource.portNumber=5432
#spring.datasource.database-name=progettoserra
spring.datasource.driver-class-name=org.postgresql.Driver
spring.jpa.database-platform=org.hibernate.dialect.PostgreSQL9Dialect

spring.jpa.properties.hibernate.temp.use_jdbc_metadata_defaults=false

#update validate create-drop
spring.batch.initialize-schema=always
#spring.jpa.hibernate.ddl-auto=validate
#non if db exists
spring.jpa.hibernate.ddl-auto=update
#spring.jpa.hibernate.naming.implicit-strategy=create
spring.jpa.show-sql=true

#logging.. enable for debug
logging.level.root=WARN
logging.level.org.springframework.web= DEBUG
logging.level.org.springframework.sql= DEBUG
logging.level.org.hibernate=ERROR
logging.level.org.springframework.security.jwt.level=DEBUG
logging.level.org.springframework.level = DEBUG
logging.level.org.springframework.security.oauth2 = DEBUG

#https://docs.spring.io/spring-boot/docs/2.0.x/reference/htmlsingle/#_custom_context_path
#server.servlet.context-path=/magazzino
server.servlet.context-path=/
#VISTE:
spring.mvc.view.prefix = /WEB-INF/views/
spring.mvc.view.suffix = .jsp
spring.mvc.static-path-pattern=/resources/**
#server.tomcat.additional-tld-skip-patterns=*.jar
login.view  = /views/login
logout.view = /views/logout
login.avatar=nerd_avatar.png
views.datatables.language=it_IT
server.error.whitelabel.enabled=false
spring.jpa.properties.hibernate.enable_lazy_load_no_trans=true
#con la security starter metto questo
#security.user.password=password
app.hostname=localhost
app.uselogoutport=true
android.apk=app-release.apk
android.appname=android-magazzino007
server.portoptional:8080
server.port: 8443
server.ssl.enabled: true
#server.port: 443
server.ssl.key-store: keystore.p12
server.ssl.key-store-password: tomcat
server.ssl.keyStoreType: PKCS12
server.ssl.keyAlias: tomcat
#uso questi paramatri in modo improprio (custom oauth for sso da form login)
security.basic.enabled:                                      false
spring.security.oauth2.client.registration.google.clientId: 73403134079-bafp3dbjig97f44sagtarqkd9da8u1j8.apps.googleusercontent.com
#517359352759-s35liif4pd7bn9oe6v4ikdr32l2vkaja.apps.googleusercontent.com
spring.security.oauth2.client.registration.google.clientSecret: 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
#  vH83Mzm5t8R4pZUmwIvja2Ga
security.oauth2.client.accessTokenUri:             https://oauth2.googleapis.com/token
security.oauth2.client.userAuthorizationUri:       https://accounts.google.com/o/oauth2/auth
security.oauth2.client.tokenName:                  oauth_token
security.oauth2.resource.userInfoUri:              https://www.googleapis.com/userinfo/v2/me
security.oauth2.resource.preferTokenInfo:          false
security.oauth2.client.clientAuthenticationScheme: form
security.oauth2.client.authenticationScheme:       query
security.oauth2.client.scope:                      email
security.oauth2.client.logoutUri:                  https://www.google.com/accounts/Logout?continue=https://appengine.google.com/_ah/logout?continue=
security.oauth2.client.roles:                      ROLE_USER,ROLE_GOOGLE_USER
security.oauth2.client.redirectssl:         true

spring.main.allow-bean-definition-overriding=true

spring.http.encoding.charset=UTF-8 
spring.http.encoding.enabled=true
spring.http.encoding.force=true
spring.http.encoding.force-request=true
spring.http.encoding.force-response=true
spring.datasource.tomcat.connection-properties=useUnicode=true;characterEncoding=utf-8;
spring.datasource.sql-script-encoding = UTF-8